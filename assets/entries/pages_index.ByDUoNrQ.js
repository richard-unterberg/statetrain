import{j as e,L as t,a,o,A as i}from"../chunks/chunk-xVInyFkq.js";import{H as r,I as l}from"../chunks/chunk-CK2SUev2.js";import"../chunks/chunk-DZeubO4x.js";const n=()=>e.jsxs(t,{className:"mt-10",children:[e.jsx(r,{className:"mb-5",children:"üè° This is the start page layout :)"}),e.jsx("p",{children:"For a side project I needed a routable typescript react application with access to a shared tone.js context. To test my code I build a small metronome implementation which needs kind of a communication layer to and from tone.js"}),e.jsx("p",{className:"mb-3",children:"We can control tone JS from here"}),e.jsx(l,{className:"mb-3"}),e.jsxs("p",{children:["or after transitioning to a ",e.jsx(a,{href:"second-page/",children:"alternative page"})," of the application"]})]}),s=Object.freeze(Object.defineProperty({__proto__:null,default:n},Symbol.toStringTag,{value:"Module"})),u={onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:o}},Layout:{type:"cumulative",definedAtData:[{filePathToShowToUser:"/components/App.tsx",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:i}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}},title:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+config.ts",fileExportPathToShowToUser:["default","title"]},valueSerialized:{type:"js-serialized",value:"Welcome | statetrain"}}};export{u as configValuesSerialized};
