import{j as e,L as t,a,i,o,b as r}from"../chunks/chunk-DXt8b1ad.js";import{H as l,I as n}from"../chunks/chunk-DElIPKZ8.js";/* empty css                      */import"../chunks/chunk-CEDExPUD.js";/* empty css                      *//* empty css                      *//* empty css                      */const s=()=>e.jsxs(t,{className:"mt-10",children:[e.jsx(l,{className:"mb-5",children:"üè° This is the start page layout :)"}),e.jsx("p",{children:"For a side project I needed a routable typescript react application with access to a shared tone.js context. To test my code I build a small metronome implementation which needs kind of a communication layer to and from tone.js"}),e.jsx("p",{className:"mb-3",children:"We can control tone JS from here"}),e.jsx(n,{className:"mb-3"}),e.jsxs("p",{children:["or after transitioning to a ",e.jsx(a,{href:"second-page/",children:"alternative page"})," of the application"]})]}),d=Object.freeze(Object.defineProperty({__proto__:null,default:s},Symbol.toStringTag,{value:"Module"})),T={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Loading:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/__internal/integration/Loading",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/__internal/integration/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:o}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"vike-react/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},Layout:{type:"cumulative",definedAtData:[{filePathToShowToUser:"/pages/+Layout.tsx",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"plus-file",exportValues:r}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:d}},title:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+config.ts",fileExportPathToShowToUser:["default","title"]},valueSerialized:{type:"js-serialized",value:"Welcome | statetrain"}}};export{T as configValuesSerialized};
